@using WAD.Models
@using WAD.Components
@using WAD.Services
@inject ILibraryService LibraryService

<EditForm Model="@User" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-3">
        <label for="id">ID</label>
        <InputNumber id="id" @bind-Value="User.Id" class="form-control" />
        <ValidationMessage For="@(() => User.Id)" />
    </div>

    <div class="form-group mb-3">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="User.Name" class="form-control" />
        <ValidationMessage For="@(() => User.Name)" />
    </div>

    <div class="form-group mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="User.Email" class="form-control" />
        <ValidationMessage For="@(() => User.Email)" />
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary me-2">@SubmitText</button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public User User { get; set; } = new User();

    [Parameter]
    public string SubmitText { get; set; } = "Save";

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    private async Task HandleValidSubmit()
    {
        if (OnValidSubmit.HasDelegate)
        {
            await OnValidSubmit.InvokeAsync(null);
        }
    }
}
