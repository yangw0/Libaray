@page "/users"
@using WAD.Models
@using WAD.Services
@inject ILibraryService LibraryService
@inject NavigationManager Navigation
@using WAD.Components

<h3 class="mb-4">
    <i class="bi bi-people-fill"></i> User Management
    <button @onclick="ShowAddForm" class="btn btn-primary float-end">
        <i class="bi bi-plus-lg"></i> Add User
    </button>
</h3>

<!-- Add/Edit Form (Matches your console's user input flow) -->
@if (showForm)
{
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-light">
            <h5>@(currentUser.Id == 0 ? "Add New User" : $"Edit User #{currentUser.Id}")</h5>
        </div>
        <div class="card-body">
            <UserForm User="@currentUser"
                      SubmitText="@(currentUser.Id == 0 ? "Add" : "Update")"
                      OnValidSubmit="@SaveUser"
                      OnCancel="@CancelForm" />

        </div>
    </div>
}

<!-- User List (Matches your console's ListUsers() display) -->
<div class="table-responsive">
    <table class="table table-hover">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Borrowed Books</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in LibraryService.GetAllUsers())
            {
                var borrowedCount = LibraryService.GetBorrowedBooks()
                .TryGetValue(user, out var books) ? books.Count : 0;

                <tr>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td>
                        @if (borrowedCount > 0)
                        {
                            <a href="/transactions" class="badge bg-warning text-decoration-none">
                                @borrowedCount book(s)
                            </a>
                        }
                        else
                        {
                            <span class="badge bg-secondary">None</span>
                        }
                    </td>
                    <td>
                        <button @onclick="() => EditUser(user)"
                                class="btn btn-sm btn-outline-primary me-2">
                            <i class="bi bi-pencil"></i> Edit
                        </button>
                        <button @onclick="() => DeleteUser(user)"
                                class="btn btn-sm btn-outline-danger"
                                disabled="@(borrowedCount > 0)">
                            <i class="bi bi-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!LibraryService.GetAllUsers().Any())
{
    <div class="alert alert-info mt-4">
        <i class="bi bi-info-circle"></i> No users found. Add your first user above.
    </div>
}

@code {
    private bool showForm = false;
    private User currentUser = new User();

    private void ShowAddForm()
    {
        currentUser = new User();
        showForm = true;
    }

    private void EditUser(User user)
    {
        currentUser = new User
            {
                Id = user.Id,
                Name = user.Name,
                Email = user.Email
            };
        showForm = true;
    }

    private void SaveUser()
    {
        if (currentUser.Id == 0)
        {
            // Matches your console's AddUser() logic
            LibraryService.AddUser(currentUser);
        }
        else
        {
            // Matches your console's EditUser() logic
            LibraryService.UpdateUser(currentUser);
        }
        showForm = false;
    }

    private void CancelForm()
    {
        showForm = false;
    }

    private void DeleteUser(User user)
    {
        // Matches your console's DeleteUser() logic
        LibraryService.DeleteUser(user.Id);
    }
}